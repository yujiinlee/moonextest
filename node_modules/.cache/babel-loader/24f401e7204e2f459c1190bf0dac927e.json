{"ast":null,"code":"var _jsxFileName = \"/Users/leeyoojin/yujiinlee-eng/src/components/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  var _errors$name, _errors$organization, _errors$email, _errors$projectGoal, _errors$timeline, _errors$budget, _errors$acceptTerms;\n\n  // for validation\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    organization: Yup.string().required(\"Organization name is required\"),\n    projectGoal: Yup.string().required(\"Please, write your project goal.\"),\n    timeline: Yup.string().required(\"Pleae write if you have timeline.\"),\n    email: Yup.string().required(\"Email is required\").email(\"Entered value does not match email format\"),\n    budget: Yup.string().required(\"Pleaes select your budget\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Terms and Conditions is required\")\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  }; // get functions to build form with useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm(formOptions);\n  const {\n    errors\n  } = formState;\n\n  function onSubmit(data, e) {\n    // display form data on success\n    console.log(\"Message submited: \" + JSON.stringify(data));\n    e.target.reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"contact_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"01\",\n        children: \"What\\u2019s your name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ...register(\"name\"),\n        className: `${errors.name ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"02\",\n        children: \"What\\u2019s the name of your organization?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"organization\",\n        ...register(\"organization\"),\n        className: `${errors.organization ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), errors.organization && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$organization = errors.organization) === null || _errors$organization === void 0 ? void 0 : _errors$organization.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"03\",\n        children: \"What\\u2019s your email address?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        ...register(\"email\"),\n        className: ` ${errors.email ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"04\",\n        children: \"Tell us about your project goals.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"projectGoal\",\n        ...register(\"projectGoal\"),\n        className: `${errors.projectGoal ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), errors.projectGoal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$projectGoal = errors.projectGoal) === null || _errors$projectGoal === void 0 ? void 0 : _errors$projectGoal.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"05\",\n        children: \"Do you have a timeline in mind?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"timeline\",\n        ...register(\"timeline\"),\n        className: `${errors.timeline ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), errors.timeline && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$timeline = errors.timeline) === null || _errors$timeline === void 0 ? void 0 : _errors$timeline.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-number\": \"06\",\n        children: \"What have you budgeted for this project?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"budget\",\n        ...register(\"budget\"),\n        className: `${errors.budget ? \"is-invalid\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"$30,000 and under\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100-200\",\n          children: \"100$-200$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"200-500\",\n          children: \"200$-500$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"500-1000\",\n          children: \"500$-1000$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), errors.budget && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$budget = errors.budget) === null || _errors$budget === void 0 ? void 0 : _errors$budget.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-spacer\",\n      style: {\n        \"--ptf-xxl\": \"2.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-form-group agreement-checkbox \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"acceptTerms\",\n        type: \"checkbox\",\n        id: \"acceptTerms\",\n        ...register(\"acceptTerms\"),\n        className: ` ${errors.acceptTerms ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ptf-checkbox\",\n        htmlFor: \"acceptTerms\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ptf-checkbox__checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \"I agree to receive occasional MoonexLabs newsletters containing news & advice on creating personal and business progress via digital tech.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), errors.acceptTerms && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-spacer\",\n      style: {\n        \"--ptf-xxl\": \"5.625rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ptf-submit-button\",\n      children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"currentColor\",\n        viewBox: \"0 0 17 17\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"FW3sJsj8gRxWrmRSQec/vgQ11EM=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/leeyoojin/yujiinlee-eng/src/components/ContactForm.jsx"],"names":["React","useForm","yupResolver","Yup","ContactForm","validationSchema","object","shape","name","string","required","organization","projectGoal","timeline","email","budget","acceptTerms","bool","oneOf","formOptions","resolver","register","handleSubmit","formState","errors","onSubmit","data","e","console","log","JSON","stringify","target","reset","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst ContactForm = () => {\r\n  // for validation\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    organization: Yup.string().required(\"Organization name is required\"),\r\n    projectGoal: Yup.string().required(\"Please, write your project goal.\"),\r\n    timeline: Yup.string().required(\"Pleae write if you have timeline.\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Entered value does not match email format\"),\r\n    budget: Yup.string().required(\"Pleaes select your budget\"),\r\n    acceptTerms: Yup.bool().oneOf(\r\n      [true],\r\n      \"Accept Terms and Conditions is required\"\r\n    ),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(validationSchema) };\r\n  // get functions to build form with useForm() hook\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  function onSubmit(data, e) {\r\n    // display form data on success\r\n    console.log(\"Message submited: \" + JSON.stringify(data));\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"contact_form\">\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"01\">What’s your name?</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          {...register(\"name\")}\r\n          className={`${errors.name ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.name && (\r\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"02\">What’s the name of your organization?</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"organization\"\r\n          {...register(\"organization\")}\r\n          className={`${errors.organization ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.organization && (\r\n          <div className=\"invalid-feedback\">{errors.organization?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"03\">What’s your email address?</label>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          {...register(\"email\")}\r\n          className={` ${errors.email ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.email && (\r\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"04\">Tell us about your project goals.</label>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"projectGoal\"\r\n          {...register(\"projectGoal\")}\r\n          className={`${errors.projectGoal ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.projectGoal && (\r\n          <div className=\"invalid-feedback\">{errors.projectGoal?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"05\">Do you have a timeline in mind?</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"timeline\"\r\n          {...register(\"timeline\")}\r\n          className={`${errors.timeline ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.timeline && (\r\n          <div className=\"invalid-feedback\">{errors.timeline?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-group\">\r\n        <label data-number=\"06\">What have you budgeted for this project?</label>\r\n        <select\r\n          name=\"budget\"\r\n          {...register(\"budget\")}\r\n          className={`${errors.budget ? \"is-invalid\" : \"\"}`}\r\n        >\r\n          <option value=\"\">$30,000 and under</option>\r\n          <option value=\"100-200\">100$-200$</option>\r\n          <option value=\"200-500\">200$-500$</option>\r\n          <option value=\"500-1000\">500$-1000$</option>\r\n        </select>\r\n        {errors.budget && (\r\n          <div className=\"invalid-feedback\">{errors.budget?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      {/* <!--Spacer--> */}\r\n      <div className=\"ptf-spacer\" style={{ \"--ptf-xxl\": \"2.5rem\" }}></div>\r\n\r\n      <div className=\"ptf-form-group agreement-checkbox \">\r\n        <input\r\n          name=\"acceptTerms\"\r\n          type=\"checkbox\"\r\n          id=\"acceptTerms\"\r\n          {...register(\"acceptTerms\")}\r\n          className={` ${errors.acceptTerms ? \"is-invalid\" : \"\"}`}\r\n        />\r\n\r\n        <label className=\"ptf-checkbox\" htmlFor=\"acceptTerms\">\r\n          <span className=\"ptf-checkbox__checkmark\"></span>I agree to receive\r\n          occasional MoonexLabs newsletters containing news & advice on creating\r\n          personal and business progress via digital tech.\r\n        </label>\r\n        {errors.acceptTerms && (\r\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      {/* <!--Spacer--> */}\r\n      <div className=\"ptf-spacer\" style={{ \"--ptf-xxl\": \"5.625rem\" }}></div>\r\n\r\n      <button className=\"ptf-submit-button\">\r\n        Submit\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 17 17\"\r\n        >\r\n          <path d=\"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\" />\r\n        </svg>\r\n      </button>\r\n      {/* End .ptf-submit-button */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}