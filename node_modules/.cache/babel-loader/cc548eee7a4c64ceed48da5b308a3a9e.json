{"ast":null,"code":"var _jsxFileName = \"/Users/leeyoojin/eng/src/components/CountDown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountDown = () => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  let interval = useRef();\n\n  const setTimer = () => {\n    const countdownDate = new Date(\"Dec 30, 2022 00:00:00\").getTime();\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countdownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (100 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n      if (distance < 0) {\n        // stop our timer\n        clearInterval(interval.current);\n      } else {\n        // update timer\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ptf-animated-block\",\n    \"data-aos\": \"fade\",\n    \"data-aos-delay\": \"100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ptf-countdown\",\n      \"data-due-date\": \"2022/01/01\",\n      style: {\n        maxWidth: \"40.3125rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"days\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digits\",\n            children: timerDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sep\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hours\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digits\",\n            children: timerHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sep\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"minutes\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digits\",\n            children: timerMinutes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sep\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ptf-countdown__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seconds\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digits\",\n            children: timerSeconds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountDown, \"L6w3BwUURqIftFOxWCmJmcOOO18=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/Users/leeyoojin/eng/src/components/CountDown.jsx"],"names":["React","useRef","useEffect","useState","CountDown","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","setTimer","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","maxWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst CountDown = () => {\r\n  const [timerDays, setTimerDays] = useState(\"00\");\r\n  const [timerHours, setTimerHours] = useState(\"00\");\r\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\r\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n\r\n  let interval = useRef();\r\n  const setTimer = () => {\r\n    const countdownDate = new Date(\"Dec 30, 2022 00:00:00\").getTime();\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = countdownDate - now;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (100 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        // stop our timer\r\n        clearInterval(interval.current);\r\n      } else {\r\n        // update timer\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMinutes(minutes);\r\n        setTimerSeconds(seconds);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimer();\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"ptf-animated-block\" data-aos=\"fade\" data-aos-delay=\"100\">\r\n      {/* <!--Countdown--> */}\r\n      <div\r\n        className=\"ptf-countdown\"\r\n        data-due-date=\"2022/01/01\"\r\n        style={{ maxWidth: \"40.3125rem\" }}\r\n      >\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"days\">\r\n            <span className=\"digits\">{timerDays}</span>\r\n            <span className=\"label\">Days</span>\r\n          </div>\r\n        </div>\r\n        {/* End .ptf-countdown__item */}\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"sep\">:</div>\r\n        </div>\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"hours\">\r\n            <span className=\"digits\">{timerHours}</span>\r\n            <span className=\"label\">Hours</span>\r\n          </div>\r\n        </div>\r\n        {/* End .ptf-countdown__item */}\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"sep\">:</div>\r\n        </div>\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"minutes\">\r\n            <span className=\"digits\">{timerMinutes}</span>\r\n            <span className=\"label\">Minutes</span>\r\n          </div>\r\n        </div>\r\n        {/* End .ptf-countdown__item */}\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"sep\">:</div>\r\n        </div>\r\n\r\n        <div className=\"ptf-countdown__item\">\r\n          <div className=\"seconds\">\r\n            <span className=\"digits\">{timerSeconds}</span>\r\n            <span className=\"label\">Seconds</span>\r\n          </div>\r\n        </div>\r\n        {/* End .ptf-countdown__item */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDown;\r\n"]},"metadata":{},"sourceType":"module"}