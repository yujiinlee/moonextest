{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  return (__assign = Object.assign || function (t) {\n    for (var i, a = 1, s = arguments.length; a < s; a++) {\n      for (var n in i = arguments[a]) {\n        Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n      }\n    }\n\n    return t;\n  }).apply(this, arguments);\n},\n    CountUp = function () {\n  function t(t, i, a) {\n    var s = this;\n    this.target = t, this.endVal = i, this.options = a, this.version = \"2.0.8\", this.defaults = {\n      startVal: 0,\n      decimalPlaces: 0,\n      duration: 2,\n      useEasing: !0,\n      useGrouping: !0,\n      smartEasingThreshold: 999,\n      smartEasingAmount: 333,\n      separator: \",\",\n      decimal: \".\",\n      prefix: \"\",\n      suffix: \"\"\n    }, this.finalEndVal = null, this.useEasing = !0, this.countDown = !1, this.error = \"\", this.startVal = 0, this.paused = !0, this.count = function (t) {\n      s.startTime || (s.startTime = t);\n      var i = t - s.startTime;\n      s.remaining = s.duration - i, s.useEasing ? s.countDown ? s.frameVal = s.startVal - s.easingFn(i, 0, s.startVal - s.endVal, s.duration) : s.frameVal = s.easingFn(i, s.startVal, s.endVal - s.startVal, s.duration) : s.countDown ? s.frameVal = s.startVal - (s.startVal - s.endVal) * (i / s.duration) : s.frameVal = s.startVal + (s.endVal - s.startVal) * (i / s.duration), s.countDown ? s.frameVal = s.frameVal < s.endVal ? s.endVal : s.frameVal : s.frameVal = s.frameVal > s.endVal ? s.endVal : s.frameVal, s.frameVal = Number(s.frameVal.toFixed(s.options.decimalPlaces)), s.printValue(s.frameVal), i < s.duration ? s.rAF = requestAnimationFrame(s.count) : null !== s.finalEndVal ? s.update(s.finalEndVal) : s.callback && s.callback();\n    }, this.formatNumber = function (t) {\n      var i,\n          a,\n          n,\n          e,\n          r = t < 0 ? \"-\" : \"\";\n      i = Math.abs(t).toFixed(s.options.decimalPlaces);\n      var o = (i += \"\").split(\".\");\n\n      if (a = o[0], n = o.length > 1 ? s.options.decimal + o[1] : \"\", s.options.useGrouping) {\n        e = \"\";\n\n        for (var l = 0, h = a.length; l < h; ++l) {\n          0 !== l && l % 3 == 0 && (e = s.options.separator + e), e = a[h - l - 1] + e;\n        }\n\n        a = e;\n      }\n\n      return s.options.numerals && s.options.numerals.length && (a = a.replace(/[0-9]/g, function (t) {\n        return s.options.numerals[+t];\n      }), n = n.replace(/[0-9]/g, function (t) {\n        return s.options.numerals[+t];\n      })), r + s.options.prefix + a + n + s.options.suffix;\n    }, this.easeOutExpo = function (t, i, a, s) {\n      return a * (1 - Math.pow(2, -10 * t / s)) * 1024 / 1023 + i;\n    }, this.options = __assign(__assign({}, this.defaults), a), this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber, this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo, this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.endVal = this.validateValue(i), this.options.decimalPlaces = Math.max(this.options.decimalPlaces), this.resetDuration(), this.options.separator = String(this.options.separator), this.useEasing = this.options.useEasing, \"\" === this.options.separator && (this.options.useGrouping = !1), this.el = \"string\" == typeof t ? document.getElementById(t) : t, this.el ? this.printValue(this.startVal) : this.error = \"[CountUp] target is null or undefined\";\n  }\n\n  return t.prototype.determineDirectionAndSmartEasing = function () {\n    var t = this.finalEndVal ? this.finalEndVal : this.endVal;\n    this.countDown = this.startVal > t;\n    var i = t - this.startVal;\n\n    if (Math.abs(i) > this.options.smartEasingThreshold) {\n      this.finalEndVal = t;\n      var a = this.countDown ? 1 : -1;\n      this.endVal = t + a * this.options.smartEasingAmount, this.duration = this.duration / 2;\n    } else this.endVal = t, this.finalEndVal = null;\n\n    this.finalEndVal ? this.useEasing = !1 : this.useEasing = this.options.useEasing;\n  }, t.prototype.start = function (t) {\n    this.error || (this.callback = t, this.duration > 0 ? (this.determineDirectionAndSmartEasing(), this.paused = !1, this.rAF = requestAnimationFrame(this.count)) : this.printValue(this.endVal));\n  }, t.prototype.pauseResume = function () {\n    this.paused ? (this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) : cancelAnimationFrame(this.rAF), this.paused = !this.paused;\n  }, t.prototype.reset = function () {\n    cancelAnimationFrame(this.rAF), this.paused = !0, this.resetDuration(), this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.printValue(this.startVal);\n  }, t.prototype.update = function (t) {\n    cancelAnimationFrame(this.rAF), this.startTime = null, this.endVal = this.validateValue(t), this.endVal !== this.frameVal && (this.startVal = this.frameVal, this.finalEndVal || this.resetDuration(), this.finalEndVal = null, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count));\n  }, t.prototype.printValue = function (t) {\n    var i = this.formattingFn(t);\n    \"INPUT\" === this.el.tagName ? this.el.value = i : \"text\" === this.el.tagName || \"tspan\" === this.el.tagName ? this.el.textContent = i : this.el.innerHTML = i;\n  }, t.prototype.ensureNumber = function (t) {\n    return \"number\" == typeof t && !isNaN(t);\n  }, t.prototype.validateValue = function (t) {\n    var i = Number(t);\n    return this.ensureNumber(i) ? i : (this.error = \"[CountUp] invalid start or end value: \" + t, null);\n  }, t.prototype.resetDuration = function () {\n    this.startTime = null, this.duration = 1e3 * Number(this.options.duration), this.remaining = this.duration;\n  }, t;\n}();\n\nexport { CountUp };","map":null,"metadata":{},"sourceType":"module"}