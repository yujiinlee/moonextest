{"ast":null,"code":"import _objectSpread from\"/Users/leeyoojin/eng/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{useForm}from\"react-hook-form\";import{yupResolver}from\"@hookform/resolvers/yup\";import*as Yup from\"yup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BlogCommentForm=function BlogCommentForm(){var _errors$comment,_errors$name,_errors$email,_errors$acceptTerms;// for validation\nvar validationSchema=Yup.object().shape({name:Yup.string().required(\"Name is required\"),comment:Yup.string().required(\"Pleae write your comment\"),email:Yup.string().required(\"Email is required\").email(\"Entered value does not match email format\"),acceptTerms:Yup.bool().oneOf([true],\"Accept Terms and Conditions is required\")});var formOptions={resolver:yupResolver(validationSchema)};// get functions to build form with useForm() hook\nvar _useForm=useForm(formOptions),register=_useForm.register,handleSubmit=_useForm.handleSubmit,formState=_useForm.formState;var errors=formState.errors;function onSubmit(data,e){// display form data on success\nconsole.log(\"Message submited: \"+JSON.stringify(data));e.target.reset();}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ptf-form-group\",children:[/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({rows:\"5\",placeholder:\"Write your comment here\",name:\"comment\"},register(\"projectGoal\")),{},{className:\"\".concat(errors.comment?\"is-invalid\":\"\")})),errors.comment&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:(_errors$comment=errors.comment)===null||_errors$comment===void 0?void 0:_errors$comment.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ptf-form-row two-col\",style:{marginBottom:\".625rem\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ptf-form-group\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({placeholder:\"Your name *\",type:\"text\",name:\"name\"},register(\"name\")),{},{className:\"\".concat(errors.name?\"is-invalid\":\"\")})),errors.name&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:(_errors$name=errors.name)===null||_errors$name===void 0?void 0:_errors$name.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ptf-form-group\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({placeholder:\"Your Email *\",name:\"email\",type:\"text\"},register(\"email\")),{},{className:\" \".concat(errors.email?\"is-invalid\":\"\")})),errors.email&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:(_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ptf-form-group agreement-checkbox \",style:{marginBottom:\"3.75rem\"},children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({name:\"acceptTerms\",type:\"checkbox\",id:\"acceptTerms\"},register(\"acceptTerms\")),{},{className:\" \".concat(errors.acceptTerms?\"is-invalid\":\"\")})),/*#__PURE__*/_jsxs(\"label\",{className:\"ptf-checkbox\",htmlFor:\"acceptTerms\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"ptf-checkbox__checkmark\"}),\"Save my name & email in this browser for next time I comment.\"]}),errors.acceptTerms&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:(_errors$acceptTerms=errors.acceptTerms)===null||_errors$acceptTerms===void 0?void 0:_errors$acceptTerms.message})]}),/*#__PURE__*/_jsx(\"p\",{className:\"form-submit\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"ptf-submit-button ptf-submit-button--style-2\",children:[\"Submit\",/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",fill:\"currentColor\",viewBox:\"0 0 17 17\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\"})})]})})]});};export default BlogCommentForm;","map":{"version":3,"sources":["/Users/leeyoojin/eng/src/components/blog/BlogCommentForm.jsx"],"names":["React","useForm","yupResolver","Yup","BlogCommentForm","validationSchema","object","shape","name","string","required","comment","email","acceptTerms","bool","oneOf","formOptions","resolver","register","handleSubmit","formState","errors","onSubmit","data","e","console","log","JSON","stringify","target","reset","message","marginBottom"],"mappings":"yGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,oEAC5B;AACA,GAAMC,CAAAA,gBAAgB,CAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB,CAC1CC,IAAI,CAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADoC,CAE1CC,OAAO,CAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAFiC,CAG1CE,KAAK,CAAET,GAAG,CAACM,MAAJ,GACJC,QADI,CACK,mBADL,EAEJE,KAFI,CAEE,2CAFF,CAHmC,CAM1CC,WAAW,CAAEV,GAAG,CAACW,IAAJ,GAAWC,KAAX,CACX,CAAC,IAAD,CADW,CAEX,yCAFW,CAN6B,CAAnB,CAAzB,CAYA,GAAMC,CAAAA,WAAW,CAAG,CAAEC,QAAQ,CAAEf,WAAW,CAACG,gBAAD,CAAvB,CAApB,CACA;AACA,aAA8CJ,OAAO,CAACe,WAAD,CAArD,CAAQE,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAAgCC,SAAhC,UAAgCA,SAAhC,CACA,GAAQC,CAAAA,MAAR,CAAmBD,SAAnB,CAAQC,MAAR,CAEA,QAASC,CAAAA,QAAT,CAAkBC,IAAlB,CAAwBC,CAAxB,CAA2B,CACzB;AACAC,OAAO,CAACC,GAAR,CAAY,qBAAuBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAnC,EACAC,CAAC,CAACK,MAAF,CAASC,KAAT,GACD,CAED,mBACE,cAAM,QAAQ,CAAEX,YAAY,CAACG,QAAD,CAA5B,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,6CACE,IAAI,CAAC,GADP,CAEE,WAAW,CAAC,yBAFd,CAGE,IAAI,CAAC,SAHP,EAIMJ,QAAQ,CAAC,aAAD,CAJd,MAKE,SAAS,WAAKG,MAAM,CAACV,OAAP,CAAiB,YAAjB,CAAgC,EAArC,CALX,GADF,CAQGU,MAAM,CAACV,OAAP,eACC,YAAK,SAAS,CAAC,kBAAf,2BAAmCU,MAAM,CAACV,OAA1C,0CAAmC,gBAAgBoB,OAAnD,EATJ,GADF,cAeE,aAAK,SAAS,CAAC,sBAAf,CAAsC,KAAK,CAAE,CAAEC,YAAY,CAAE,SAAhB,CAA7C,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,0CACE,WAAW,CAAC,aADd,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,EAIMd,QAAQ,CAAC,MAAD,CAJd,MAKE,SAAS,WAAKG,MAAM,CAACb,IAAP,CAAc,YAAd,CAA6B,EAAlC,CALX,GADF,CAQGa,MAAM,CAACb,IAAP,eACC,YAAK,SAAS,CAAC,kBAAf,wBAAmCa,MAAM,CAACb,IAA1C,uCAAmC,aAAauB,OAAhD,EATJ,GADF,cAaE,aAAK,SAAS,CAAC,gBAAf,wBACE,0CACE,WAAW,CAAC,cADd,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,EAIMb,QAAQ,CAAC,OAAD,CAJd,MAKE,SAAS,YAAMG,MAAM,CAACT,KAAP,CAAe,YAAf,CAA8B,EAApC,CALX,GADF,CAQGS,MAAM,CAACT,KAAP,eACC,YAAK,SAAS,CAAC,kBAAf,yBAAmCS,MAAM,CAACT,KAA1C,wCAAmC,cAAcmB,OAAjD,EATJ,GAbF,GAfF,cA2CE,aACE,SAAS,CAAC,oCADZ,CAEE,KAAK,CAAE,CAAEC,YAAY,CAAE,SAAhB,CAFT,wBAIE,0CACE,IAAI,CAAC,aADP,CAEE,IAAI,CAAC,UAFP,CAGE,EAAE,CAAC,aAHL,EAIMd,QAAQ,CAAC,aAAD,CAJd,MAKE,SAAS,YAAMG,MAAM,CAACR,WAAP,CAAqB,YAArB,CAAoC,EAA1C,CALX,GAJF,cAYE,eAAO,SAAS,CAAC,cAAjB,CAAgC,OAAO,CAAC,aAAxC,wBACE,aAAM,SAAS,CAAC,yBAAhB,EADF,mEAZF,CAgBGQ,MAAM,CAACR,WAAP,eACC,YAAK,SAAS,CAAC,kBAAf,+BAAmCQ,MAAM,CAACR,WAA1C,8CAAmC,oBAAoBkB,OAAvD,EAjBJ,GA3CF,cAiEE,UAAG,SAAS,CAAC,aAAb,uBACE,gBAAQ,SAAS,CAAC,8CAAlB,iCAEE,YACE,KAAK,CAAC,4BADR,CAEE,IAAI,CAAC,cAFP,CAGE,OAAO,CAAC,WAHV,uBAKE,aAAM,CAAC,CAAC,oEAAR,EALF,EAFF,GADF,EAjEF,GADF,CAiFD,CA1GD,CA4GA,cAAe3B,CAAAA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst BlogCommentForm = () => {\r\n  // for validation\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    comment: Yup.string().required(\"Pleae write your comment\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Entered value does not match email format\"),\r\n    acceptTerms: Yup.bool().oneOf(\r\n      [true],\r\n      \"Accept Terms and Conditions is required\"\r\n    ),\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(validationSchema) };\r\n  // get functions to build form with useForm() hook\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  function onSubmit(data, e) {\r\n    // display form data on success\r\n    console.log(\"Message submited: \" + JSON.stringify(data));\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"ptf-form-group\">\r\n        <textarea\r\n          rows=\"5\"\r\n          placeholder=\"Write your comment here\"\r\n          name=\"comment\"\r\n          {...register(\"projectGoal\")}\r\n          className={`${errors.comment ? \"is-invalid\" : \"\"}`}\r\n        />\r\n        {errors.comment && (\r\n          <div className=\"invalid-feedback\">{errors.comment?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div className=\"ptf-form-row two-col\" style={{ marginBottom: \".625rem\" }}>\r\n        <div className=\"ptf-form-group\">\r\n          <input\r\n            placeholder=\"Your name *\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            {...register(\"name\")}\r\n            className={`${errors.name ? \"is-invalid\" : \"\"}`}\r\n          />\r\n          {errors.name && (\r\n            <div className=\"invalid-feedback\">{errors.name?.message}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"ptf-form-group\">\r\n          <input\r\n            placeholder=\"Your Email *\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            {...register(\"email\")}\r\n            className={` ${errors.email ? \"is-invalid\" : \"\"}`}\r\n          />\r\n          {errors.email && (\r\n            <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <div\r\n        className=\"ptf-form-group agreement-checkbox \"\r\n        style={{ marginBottom: \"3.75rem\" }}\r\n      >\r\n        <input\r\n          name=\"acceptTerms\"\r\n          type=\"checkbox\"\r\n          id=\"acceptTerms\"\r\n          {...register(\"acceptTerms\")}\r\n          className={` ${errors.acceptTerms ? \"is-invalid\" : \"\"}`}\r\n        />\r\n\r\n        <label className=\"ptf-checkbox\" htmlFor=\"acceptTerms\">\r\n          <span className=\"ptf-checkbox__checkmark\"></span>Save my name & email\r\n          in this browser for next time I comment.\r\n        </label>\r\n        {errors.acceptTerms && (\r\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\r\n        )}\r\n      </div>\r\n      {/* End .ptf-form-group */}\r\n\r\n      <p className=\"form-submit\">\r\n        <button className=\"ptf-submit-button ptf-submit-button--style-2\">\r\n          Submit\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 17 17\"\r\n          >\r\n            <path d=\"M16 .997V10h-1V2.703L4.683 13l-.707-.708L14.291 1.997H6.975v-1H16z\" />\r\n          </svg>\r\n        </button>\r\n      </p>\r\n      {/* End .form-submit */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BlogCommentForm;\r\n"]},"metadata":{},"sourceType":"module"}